[{"content":"Main difference Redis Memcached in-memory (except OOM or AOF/RDB enabled) data store and it is not volatile in-memory cache and it is volatile has data types no data types keys with a maximum size of 512MB and also values up to 512MB keys with a maximum size of 250B and values up to 1MB How Redis achieves persistence Redis supports persistence, thus it’s called a data store, in two different ways:\nRDB snapshot: Is a point-in-time snapshot of all your dataset, that is stored in a file in disk and performed at specified intervals. This way, the dataset can be restored on startup.\nAOF log: Is an Append Only File log of all the write commands performed in the Redis server. This file is also stored in disk, so by re-running all the commands in their order, a dataset can be restored on startup.\nThese files are handled by a child process and this is a key factor in deciding which kind of persistence to use.\nIf the dataset stored in Redis is too big, the RDB file will take some time to be created, which has an impact on the response time. On the other hand, it will be faster to load on boot up compared to the AOF log.\nThe AOF log is better if data loss is not acceptable at all, as it can be updated at every command. It also has no corruption issues since it\u0026rsquo;s an append-only file. However, it can grow much larger than an RDB snapshot\nHow to Choose Just it\u0026rsquo;s important to consider its pros and cons right from the beginning to avoid changes and migrations during the project.\nRef:Redis vs Memcached: which one to choose?\n","permalink":"https://hengistwang.github.io/posts/13_redis_and_memcached/","summary":"\u003ch2 id=\"main-difference\"\u003eMain difference\u003c/h2\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eRedis\u003c/th\u003e\n          \u003cth\u003eMemcached\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003ein-memory (except OOM or AOF/RDB enabled) data store and it is not volatile\u003c/td\u003e\n          \u003ctd\u003ein-memory cache and it is volatile\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003ehas data types\u003c/td\u003e\n          \u003ctd\u003eno data types\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003ekeys with a maximum size of 512MB and also values up to 512MB\u003c/td\u003e\n          \u003ctd\u003ekeys with a maximum size of 250B and values up to 1MB\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"how-redis-achieves-persistence\"\u003eHow Redis achieves persistence\u003c/h2\u003e\n\u003cp\u003eRedis supports persistence, thus it’s called a data store, in two different ways:\u003c/p\u003e","title":"Redis and Memcached"},{"content":"Building Abstractions with Procedures At first this book talk about elements of programming is interesting primitive expressions means of combination means of abstraction in this book we are going to use scheme language, and I use chicken interpreter, just because I like it\u0026rsquo;s interesting name.\nthis language use prefix notation like this (+ 1 2 3 4 5 6 7 8 9) name something like value (define size 2) this associate the value 2 with the name size define procedure (define (suqare x) (* x x)) or (define square (lambda (x) (* x x)) this is some kind of syntactic sugar, but the lambda type is more essential. a good question asked at the end of first class, what\u0026#39;s the difference between the following two expressions (define a (* 5 5 )) (define (b) (* 5 5)) a ==\u0026gt; 25 (a) ==\u0026gt; Error: call of non-procedure: 25 b ==\u0026gt; #\u0026lt;procedure (b)\u0026gt; (b) ==\u0026gt; 25 applicative order versus normal order \u0026ldquo;fully expand and then reduce\u0026rdquo; method is normal-order, and \u0026ldquo;evaluate the arguments and then apply\u0026rdquo; method is applicative-order evaluation, and the second method is the interpreter actually uses. partly because of the additional efficiency obtained from avoiding multiple evaluation of expressions, and more significantly, normal-order evaluation becomes much more complicated to deal with when we leave the realm of procedures that can be modeled by substitution.\nif you can name it, you have power of it\n","permalink":"https://hengistwang.github.io/posts/12_sicp/","summary":"\u003ch2 id=\"building-abstractions-with-procedures\"\u003eBuilding Abstractions with Procedures\u003c/h2\u003e\n\u003ch3 id=\"at-first-this-book-talk-about-elements-of-programming-is-interesting\"\u003eAt first this book talk about elements of programming is interesting\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eprimitive expressions\u003c/li\u003e\n\u003cli\u003emeans of combination\u003c/li\u003e\n\u003cli\u003emeans of abstraction\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003ein this book we are going to use scheme language, and I use chicken interpreter, just because I like it\u0026rsquo;s interesting name.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-scheme\" data-lang=\"scheme\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ethis language use prefix notation like this\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e(+ \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e3\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e4\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e6\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e7\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e8\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e9\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ename something like value\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e(\u003cspan style=\"color:#66d9ef\"\u003edefine \u003c/span\u003esize \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ethis associate the value \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e with the name size\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edefine \u003c/span\u003eprocedure\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e(\u003cspan style=\"color:#66d9ef\"\u003edefine \u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003esuqare\u003c/span\u003e x) (* x x))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eor\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e(\u003cspan style=\"color:#66d9ef\"\u003edefine \u003c/span\u003esquare (\u003cspan style=\"color:#66d9ef\"\u003elambda \u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ex\u003c/span\u003e) (* x x))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ethis is some kind of syntactic sugar, but the \u003cspan style=\"color:#66d9ef\"\u003elambda \u003c/span\u003etype is more essential\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ea good question asked at the end of first class, what\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;s\u003c/span\u003e the difference between the following two expressions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e(\u003cspan style=\"color:#66d9ef\"\u003edefine \u003c/span\u003ea (* \u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e ))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e(\u003cspan style=\"color:#66d9ef\"\u003edefine \u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eb\u003c/span\u003e) (* \u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e a  ==\u0026gt; \u003cspan style=\"color:#ae81ff\"\u003e25\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e(\u003cspan style=\"color:#a6e22e\"\u003ea\u003c/span\u003e) ==\u0026gt; Error: call of non-procedure: \u003cspan style=\"color:#ae81ff\"\u003e25\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e b  ==\u0026gt; \u003cspan style=\"color:#f92672\"\u003e#\u003c/span\u003e\u0026lt;procedure (\u003cspan style=\"color:#a6e22e\"\u003eb\u003c/span\u003e)\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e(\u003cspan style=\"color:#a6e22e\"\u003eb\u003c/span\u003e) ==\u0026gt; \u003cspan style=\"color:#ae81ff\"\u003e25\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"applicative-order-versus-normal-order\"\u003eapplicative order versus normal order\u003c/h3\u003e\n\u003cp\u003e\u0026ldquo;fully expand and then reduce\u0026rdquo; method is normal-order, and \u0026ldquo;evaluate the arguments and then apply\u0026rdquo; method is applicative-order evaluation, and the second method is the interpreter actually uses. partly because of the additional efficiency obtained from avoiding multiple evaluation of expressions, and more significantly, normal-order evaluation becomes much more complicated to deal with when we leave the realm of procedures that can be modeled by substitution.\u003c/p\u003e","title":"SICP"},{"content":"I met a bug recently, it\u0026rsquo;s because I didn\u0026rsquo;t notice the return value of a system call, and use it directly, sadly the compiler not be able to identify this kind problem, until I run it, I notice the program will never enter one condition.\nfinally I found the getenv system call returns char* and I compare it with a string in C++, so this will not equal forever.\nThis reminds me a book called Algorithms + Data Structures = Programs. I must know what data structure I manipulated with. Under this promise, I will write good and correct programs. So deal with function input well is a good habit with doubt.\n","permalink":"https://hengistwang.github.io/posts/11_one_bug_i_encountered_and_some_thoughts/","summary":"\u003cp\u003eI met a bug recently, it\u0026rsquo;s because I didn\u0026rsquo;t notice the return value of a system call, and use it directly, sadly the compiler not be able to identify this kind problem, until I run it, I notice the program will never enter one condition.\u003c/p\u003e\n\u003cp\u003efinally I found the getenv system call returns char* and I compare it with a string in C++, so this will not equal forever.\u003c/p\u003e\n\u003cp\u003eThis reminds me a book called Algorithms + Data Structures = Programs. I must know what data structure I manipulated with. Under this promise, I will write good and correct programs. So deal with function input well is a good habit with doubt.\u003c/p\u003e","title":"One bug I encountered and some thoughts"},{"content":"Should I set default value when write a function, and where to set? In the declaration or the implementation the answer is in the declaration, and should in header file. In case of other part uses this function and not set a default value, if set a default value in the implementation, the other file included this file can\u0026rsquo;t know what default value is, and not able to compile it. For example\n//*.h int add(int a, int b); //*.cc int add(int a = 1, int b = 1) { return a + b; } // test.cc #include \u0026#34;a.h\u0026#34; #include \u0026lt;iostream\u0026gt; using namespace std; int main() { cout \u0026lt;\u0026lt; add(1) \u0026lt;\u0026lt; endl; ; } ❯ g++ test.cc -L. -la test.cc: In function ‘int main()’: test.cc:6:16: error: too few arguments to function ‘int add(int, int)’ 6 | cout \u0026lt;\u0026lt; add(1)\u0026lt;\u0026lt; endl;; | ~~~^~~ In file included from test.cc:1: a.h:1:5: note: declared here 1 | int add(int a , int b ); | ^~~ in the above program, test.cc include a.h, but default value is not set in the header file, when compile test.cc, the compiler will require add function two parameters, but only one is here, so it will not be able to compile.\n","permalink":"https://hengistwang.github.io/posts/10_default_value_of_function/","summary":"\u003cp\u003eShould I set default value when write a function, and where to set? In the declaration or the implementation\nthe answer is in the declaration, and should in header file. In case of other part uses this function and not set a default value, if set a default value in the implementation, the other file included this file can\u0026rsquo;t know what default value is, and not able to compile it.\nFor example\u003c/p\u003e","title":"Default value of function"},{"content":"common sense there are five solution to solve unser problems\nsymmetric cryptography public-key cryptography hash Message Authentication Code Digital Signature threat speciality solution eavesdrop Confidentiality 1 \u0026amp; 2 falsity Integrity 3 \u0026amp; 4 \u0026amp; 5 disguise Authenticity 4 \u0026amp; 5 denial Nonrepudiation 5 shoule use public crypto algorithm, instead of private crypto algorithm\ncryptography in history caesar cipher just brute-force attack\n#include \u0026lt;cctype\u0026gt; #include \u0026lt;iostream\u0026gt; using namespace std; void func(string s) { for (int i = 0; i \u0026lt; 26; ++i) { string temp(s); for (auto \u0026amp;c : temp) { c = tolower(c); c = ((c + i) - 97) % 26 + 97; } cout \u0026lt;\u0026lt; temp \u0026lt;\u0026lt; endl; } } int main() { string s; cin \u0026gt;\u0026gt; s; func(s); } simple substitution cipher Letter_frequency\nEnigma read the following books:\nThe Code Book: The Science of Secrecy from Ancient Egypt to Quantum Cryptography Paperback – August 29, 2000\nAlan Turing: The Enigma: The Book That Inspired the Film The Imitation Game - Updated Edition Paperback – Illustrated, November 10, 2014\nCode Breaking: A History and Explanation Paperback – December 4, 2012\nTo be continued, recently I found the book I am reading was too elementary, so I decide not to continue finish it, and I will search for some material cover the subject in enough depth.\n","permalink":"https://hengistwang.github.io/posts/9_cryptography/","summary":"\u003ch2 id=\"common-sense\"\u003ecommon sense\u003c/h2\u003e\n\u003cp\u003ethere are five solution to solve unser problems\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003esymmetric cryptography\u003c/li\u003e\n\u003cli\u003epublic-key cryptography\u003c/li\u003e\n\u003cli\u003ehash\u003c/li\u003e\n\u003cli\u003eMessage Authentication Code\u003c/li\u003e\n\u003cli\u003eDigital Signature\u003c/li\u003e\n\u003c/ol\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003ethreat\u003c/th\u003e\n          \u003cth\u003especiality\u003c/th\u003e\n          \u003cth\u003esolution\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eeavesdrop\u003c/td\u003e\n          \u003ctd\u003eConfidentiality\u003c/td\u003e\n          \u003ctd\u003e1 \u0026amp; 2\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003efalsity\u003c/td\u003e\n          \u003ctd\u003eIntegrity\u003c/td\u003e\n          \u003ctd\u003e3 \u0026amp; 4 \u0026amp; 5\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003edisguise\u003c/td\u003e\n          \u003ctd\u003eAuthenticity\u003c/td\u003e\n          \u003ctd\u003e4 \u0026amp; 5\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003edenial\u003c/td\u003e\n          \u003ctd\u003eNonrepudiation\u003c/td\u003e\n          \u003ctd\u003e5\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eshoule use public crypto algorithm, instead of private crypto algorithm\u003c/p\u003e\n\u003ch2 id=\"cryptography-in-history\"\u003ecryptography in history\u003c/h2\u003e\n\u003ch3 id=\"caesar-cipher\"\u003ecaesar cipher\u003c/h3\u003e\n\u003cp\u003ejust brute-force attack\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-cpp\" data-lang=\"cpp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#include\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e\u0026lt;cctype\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#include\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e\u0026lt;iostream\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eusing\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enamespace\u003c/span\u003e std;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003efunc\u003c/span\u003e(string s) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e (\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e i \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e; i \u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e26\u003c/span\u003e; \u003cspan style=\"color:#f92672\"\u003e++\u003c/span\u003ei) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    string temp(s);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e (\u003cspan style=\"color:#66d9ef\"\u003eauto\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003ec : temp) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      c \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e tolower(c);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      c \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e ((c \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e i) \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e97\u003c/span\u003e) \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e26\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e97\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    cout \u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e temp \u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e endl;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  string s;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  cin \u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e s;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  func(s);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"simple-substitution-cipher\"\u003esimple substitution cipher\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Letter_frequency\"\u003eLetter_frequency\u003c/a\u003e\u003c/p\u003e","title":"cryptography"},{"content":"It\u0026rsquo;s always frustrating to use Git because of some wall. I recently read a blog from manateelazycat, he suggests a way to use Git via HTTPS, just need to edit ~/.ssh/config and add the following config in it\nHost github.com Hostname ssh.github.com Port 443 User git Test it\n❯ ssh -T git@github.com Hi \u0026lt;USERNAME\u0026gt;! You\u0026#39;ve successfully authenticated, but GitHub does not provide shell access. Git via HTTPS ","permalink":"https://hengistwang.github.io/posts/8_git_via_https/","summary":"\u003cp\u003eIt\u0026rsquo;s always frustrating to use Git because of some wall. I recently read a blog from manateelazycat, he suggests a way to use Git via HTTPS,\njust need to edit ~/.ssh/config and add the following config in it\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-nil\" data-lang=\"nil\"\u003eHost github.com\nHostname ssh.github.com\nPort 443\nUser git\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTest it\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-nil\" data-lang=\"nil\"\u003e❯ ssh -T git@github.com\nHi \u0026lt;USERNAME\u0026gt;! You\u0026#39;ve successfully authenticated, but GitHub does not provide shell access.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ca href=\"https://manateelazycat.github.io/2022/05/29/git-via-https/\"\u003eGit via HTTPS \u003c/a\u003e\u003c/p\u003e","title":"Git via HTTPS"},{"content":"Here is the Question /*A.c*/ #include \u0026lt;stdio.h\u0026gt; int sayHi() { printf(\u0026#34;Hi, this is AAAAA\\n\u0026#34;); return 0; } int sayOut() { sayHi(); printf(\u0026#34;Use this to introduce AAAAA\\n\u0026#34;); return 0; } /*B.c*/ #include \u0026lt;stdio.h\u0026gt; int sayHi() { printf(\u0026#34;Hi, this is BBBBB\\n\u0026#34;); return 0; } int sayOut() { sayHi(); printf(\u0026#34;Use this to introduce BBBBB\\n\u0026#34;); return 0; } #include \u0026lt;stdio.h\u0026gt; extern int sayOut(); int main() { sayOut(); return 0; } # if link A first \u0026gt;gcc test.c -L. -lA -lB \u0026gt;./a.out Hi, this is AAAAA Use this to introduce AAAAA # if link B first \u0026gt;gcc test.c -L. -lB -lA \u0026gt;./a.out Hi, this is BBBBB Use this to introduce BBBBB First solution at first i use dlopen to explicitly load a dynamic library\n#include \u0026lt;stdio.h\u0026gt; #include\u0026lt;dlfcn.h\u0026gt; extern int sayOut(); typedef int (*func_pt)(); int main() { void *handle = NULL; func_pt func = NULL; if((handle = dlopen(\u0026#34;./libA.so\u0026#34;,RTLD_LAZY))== NULL) { printf(\u0026#34;dlopen %s\\n\u0026#34;, dlerror()); return -1; } func = dlsym(handle, \u0026#34;sayOut\u0026#34;); func(); dlclose(handle); if((handle = dlopen(\u0026#34;./libB.so\u0026#34;,RTLD_LAZY))== NULL) { printf(\u0026#34;dlopen %s\\n\u0026#34;, dlerror()); return -1; } func = dlsym(handle, \u0026#34;sayOut\u0026#34;); func(); dlclose(handle); return 0; } ❯gcc test.c -L. -lA -lB ❯ ./a.out Hi, this is AAAAA Use this to introduce AAAAA Hi, this is AAAAA Use this to introduce BBBBB ❯ gcc test.c -L. -lB -lA ❯ ./a.out Hi, this is BBBBB Use this to introduce AAAAA Hi, this is BBBBB Use this to introduce BBBBB we can see the outer func sayOut is load explicitly, however the inner function still related to linking order it is because the inner function are exposed to the outside\nSecond solution i use attrubute to control if a function should expose to the outside here is an example\n/*A.c*/ #include \u0026lt;stdio.h\u0026gt; #define DLL_PUBLIC __attribute__((visibility(\u0026#34;default\u0026#34;))) #define DLL_LOCAL __attribute__((visibility(\u0026#34;hidden\u0026#34;))) DLL_LOCAL int sayHi() { printf(\u0026#34;Hi, this is AAAAA\\n\u0026#34;); return 0; } DLL_PUBLIC int sayOut() { sayHi(); printf(\u0026#34;Use this to introduce AAAAA\\n\u0026#34;); return 0; } /*B.c*/ #include \u0026lt;stdio.h\u0026gt; #define DLL_PUBLIC __attribute__((visibility(\u0026#34;default\u0026#34;))) #define DLL_LOCAL __attribute__((visibility(\u0026#34;hidden\u0026#34;))) DLL_LOCAL int sayHi() { printf(\u0026#34;Hi, this is BBBBB\\n\u0026#34;); return 0; } DLL_PUBLIC int sayOut() { sayHi(); printf(\u0026#34;Use this to introduce BBBBB\\n\u0026#34;); return 0; } ❯ gcc test.c -L. -lA -lB ❯ ./a.out Hi, this is AAAAA Use this to introduce AAAAA Hi, this is BBBBB Use this to introduce BBBBB ❯ gcc test.c -L. -lB -lA ❯ ./a.out Hi, this is AAAAA Use this to introduce AAAAA Hi, this is BBBBB Use this to introduce BBBBB Third solution The third way is only set outer function to visible and compile it with -fvisibility=hidden argument\n/*A.c*/ #include \u0026lt;stdio.h\u0026gt; #define DLL_PUBLIC __attribute__((visibility(\u0026#34;default\u0026#34;))) int sayHi() { printf(\u0026#34;Hi, this is AAAAA\\n\u0026#34;); return 0; } DLL_PUBLIC int sayOut() { sayHi(); printf(\u0026#34;Use this to introduce AAAAA\\n\u0026#34;); return 0; } /*B.c*/ #include \u0026lt;stdio.h\u0026gt; #define DLL_PUBLIC __attribute__((visibility(\u0026#34;default\u0026#34;))) int sayHi() { printf(\u0026#34;Hi, this is BBBBB\\n\u0026#34;); return 0; } DLL_PUBLIC int sayOut() { sayHi(); printf(\u0026#34;Use this to introduce BBBBB\\n\u0026#34;); return 0; } and it worked as expected ❯ gcc test.c -L. -lA -lB ❯ ./a.out Hi, this is AAAAA Use this to introduce AAAAA Hi, this is BBBBB Use this to introduce BBBBB ❯ gcc test.c -L. -lB -lA ❯ ./a.out Hi, this is AAAAA Use this to introduce AAAAA Hi, this is BBBBB Use this to introduce BBBBB https://blog.csdn.net/giveaname/article/details/103353828\n","permalink":"https://hengistwang.github.io/posts/7_name_conflict_between_multiple_libs/","summary":"\u003ch2 id=\"here-is-the-question\"\u003eHere is the Question\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-c\" data-lang=\"c\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e/*A.c*/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#include\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e\u0026lt;stdio.h\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esayHi\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003eprintf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hi, this is AAAAA\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esayOut\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003esayHi\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003eprintf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Use this to introduce AAAAA\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-c\" data-lang=\"c\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e/*B.c*/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#include\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e\u0026lt;stdio.h\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esayHi\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003eprintf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Hi, this is BBBBB\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esayOut\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003esayHi\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003eprintf\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Use this to introduce BBBBB\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e\\n\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-c\" data-lang=\"c\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#include\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e\u0026lt;stdio.h\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eextern\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esayOut\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003esayOut\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# if link A first\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026gt;gcc test.c -L. -lA -lB\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026gt;./a.out\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eHi, this is AAAAA\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eUse this to introduce AAAAA\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# if link B first\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026gt;gcc test.c -L. -lB -lA\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u0026gt;./a.out\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eHi, this is BBBBB\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eUse this to introduce BBBBB\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"first-solution\"\u003eFirst solution\u003c/h2\u003e\n\u003cp\u003eat first i use dlopen to explicitly load a dynamic library\u003c/p\u003e","title":"name conflict multiple libs"},{"content":"as far as we know, zlib was forced to shut down by the USA government. However, it still remains available on the dark web, we can visit it through the tor-browser, and its address is posted on the Wikipedia, Here is the address:\nloginzlib​2vrak5zzpcocc3ouizykn6k5qecgj2tzlnab5wcbqhembyd.onion\n","permalink":"https://hengistwang.github.io/posts/6_zlib_is_still_alive/","summary":"\u003cp\u003eas far as we know, zlib was forced to shut down by the USA government. However, it still remains available on the dark web, we can visit it through the tor-browser, and its address is posted on the Wikipedia, Here is the address:\u003c/p\u003e\n\u003cp\u003eloginzlib​2vrak5zzpcocc3ouizykn6k5qecgj2tzlnab5wcbqhembyd.onion\u003c/p\u003e","title":"Zlib is still alive"},{"content":"I am not recommended to build from scratch, there are several community driven configuration framework, like Doom Emacs Spacemacs\u0026hellip; etc. I am highly recommend to use Doom Emacs, it\u0026rsquo;s very easy to install, just follow it\u0026rsquo;s Getting Started Guide After install it, open it and type spc+f+p to open config file, int the init.el ,we can Remove comments to enable some feature(make sure to execute doom sync to install the feature), like cc, python, and so many tools that can help us to do many things.\nRecently I found a useful tool that can help me to correct my word spell and grammar mistake, it called grammar in the init.el\u0026rsquo;s checkers category. After all set up well, execute the langtool-check command in emacs to check the grammar and then execute langtool-correct-buffer to correct the grammar mistake.\n","permalink":"https://hengistwang.github.io/posts/5_build_ide_with_emacs/","summary":"\u003cp\u003eI am not recommended to build from scratch, there are several community driven configuration framework, like Doom Emacs Spacemacs\u0026hellip; etc. I am highly recommend to use \u003ca href=\"https://github.com/doomemacs/doomemacs\"\u003eDoom Emacs\u003c/a\u003e, it\u0026rsquo;s very easy to install, just follow it\u0026rsquo;s \u003ca href=\"https://github.com/doomemacs/doomemacs/blob/master/docs/getting_started.org\"\u003eGetting Started Guide\u003c/a\u003e\nAfter install it, open it and type spc+f+p to open config file, int the init.el ,we can Remove comments to enable some feature(make sure to execute doom sync to install the feature), like cc, python, and so many tools that can help us to do many things.\u003c/p\u003e","title":"Build IDE with emacs"},{"content":"After using several Linux distributions, it hard for me to find one suit me well, I have been using openSUSE TW for about two years, it is an excellent system, help me and take care of all the miscellaneous. But when I started getting involved with Linux Kernel, I would like to try some interesting features like the musl libc and no-multilib system, and it is easy to customize my own system from kernel to software. If a want a feature I can tell the system I need it and recompile the software, of course other system can do that too, but Gentoo offers the most convenient way to do such thing through it\u0026rsquo;s \u0026ldquo;USE flag\u0026rdquo;.\nFor example, when I install Emacs, and I need Emacs Lisp native compiler support, I just need to add a USE flag like below\napp-editors/emacs jit then recompile the Emacs, I will get an Emacs with Emacs Lisp native compiler support. Without a doubt it is very easy to customize software.\n","permalink":"https://hengistwang.github.io/posts/4_advantages_using_gentoo/","summary":"\u003cp\u003eAfter using several Linux distributions, it hard for me to find one suit me well, I have been using openSUSE TW for about two years, it is an excellent system, help me and take care of all the miscellaneous. But when I started getting involved with Linux Kernel, I would like to try some interesting features like the musl libc and no-multilib system, and it is easy to customize my own system from kernel to software. If a want a feature I can tell the system I need it and recompile the software, of course other system can do that too, but Gentoo offers the most convenient way to do such thing through it\u0026rsquo;s \u0026ldquo;USE flag\u0026rdquo;.\u003c/p\u003e","title":"Advantages using Gentoo"},{"content":"Problem class C : public enable_shared_from_this\u0026lt;C\u0026gt; { public: std::shared_ptr\u0026lt;C\u0026gt; func() { std::shared_ptr\u0026lt;C\u0026gt; local_sp_a(this); return local_sp_a; } }; int main() { C c; auto a = c.func(); return 0; } // Output: // ./a.out // double free or corruption (out) // fish: Job 1, \u0026#39;./a.out\u0026#39; terminated by signal SIGABRT (Abort) Why it is because when a shared_ptr was created, the control block was build up too, and there are three methods can create control block\nmake_shared\nmake a shared_ptr from a unique_ptr\nmake a shared_ptr from an origin pointer(this(class) is an origin pointer)\nWhere there is more than one control block for only one object, it will free the object more than once.\nIn order to get shared_ptr for a \u0026ldquo;this\u0026rdquo; pointer in a class, we need to use shared_from_this() to create shared_ptr point to Current object and connect to the same created control block, Avoided the multi control block problem\nBest practice #include \u0026lt;iostream\u0026gt; #include \u0026lt;memory\u0026gt; using namespace std; class C : public enable_shared_from_this\u0026lt;C\u0026gt; { public: shared_ptr\u0026lt;C\u0026gt; GetThis() { return shared_from_this(); } static shared_ptr\u0026lt;C\u0026gt; Instance() { return shared_ptr\u0026lt;C\u0026gt;(new C()); } private: C() = default; }; int main() { shared_ptr\u0026lt;C\u0026gt; c = C::Instance(); shared_ptr\u0026lt;C\u0026gt; a = c-\u0026gt;GetThis(); return 0; } ","permalink":"https://hengistwang.github.io/posts/3_what_is_enable_shared_from_this_in_cpp/","summary":"\u003ch2 id=\"problem\"\u003eProblem\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-cpp\" data-lang=\"cpp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eC\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e enable_shared_from_this\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eC\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e std\u003cspan style=\"color:#f92672\"\u003e::\u003c/span\u003eshared_ptr\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eC\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e  func() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    std\u003cspan style=\"color:#f92672\"\u003e::\u003c/span\u003eshared_ptr\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eC\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e local_sp_a(\u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e local_sp_a;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e};\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    C c;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eauto\u003c/span\u003e a \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e c.func();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// Output:\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// ./a.out\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// double free or corruption (out)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// fish: Job 1, \u0026#39;./a.out\u0026#39; terminated by signal SIGABRT (Abort)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"why\"\u003eWhy\u003c/h2\u003e\n\u003cp\u003eit is because when a shared_ptr was created, the control block was build up too, and there are three methods can create control block\u003c/p\u003e","title":"What is enable_shared_from_this in cpp"},{"content":"I. Prepare Disk #disk wipe sgdisk --zap-all /dev/sda #partition disk cfdisk -z /dev/sda mkfs.vfat -F 32 /dev/sda1 mkfs.btrfs/ext4/xfs/.... /dev/sda3 mkswap /dev/sda2 swapon /dev/sda2 #then mount them II. Installing stage3 Download the stage3 from Gentoo\u0026rsquo;s website and put it in the /mnt/gentoo\n# unpack it tar xpvf stage3-*.tar.xz --xattrs-include=\u0026#39;*.*\u0026#39; --numeric-owner # get the portage config from my own git repo # and set fstab genfstab -U /mnt/gentoo \u0026gt;\u0026gt; /mnt/gentoo/etc/fstab # then config repos.conf: mkdir --parents /mnt/gentoo/etc/portage/repos.conf cp /mnt/gentoo/usr/share/portage/config/repos.conf /mnt/gentoo/etc/portage/repos.conf/gentoo.conf # Copy DNS info cp --dereference /etc/resolv.conf /mnt/gentoo/etc/ # Mounting the necessary filesystems mount --types proc /proc /mnt/gentoo/proc mount --rbind /sys /mnt/gentoo/sys mount --make-rslave /mnt/gentoo/sys mount --rbind /dev /mnt/gentoo/dev mount --make-rslave /mnt/gentoo/dev mount --bind /run /mnt/gentoo/run mount --make-slave /mnt/gentoo/run # chroot chroot /mnt/gentoo /bin/bash source /etc/profile export PS1=\u0026#34;(chroot) ${PS1}\u0026#34; # make sure all partition are mounted correct emerge --sync #set profle eselect profile list eselect profile set X # config ccache before this step emerge -auvDN --with-bdeps=y --autounmask-write @world add ccache\nemerge -av dev-util/ccache #config ccache mkdir -p /var/cache/ccache chown root:portage -R /var/cache/ccache chmod 2775 -R /var/cache/ccache Then edit /var/cache/ccache/ccache.conf\nmax_size = 512.0G umask = 002 hash_dir = false compiler_check = %compiler% -v cache_dir_levels = 3 compression = true compression_level = 1 III. Post configure ln -sf ../usr/share/zoneinfo/Asia/Shanghai /etc/localtime echo \u0026#34;en_US.UTF-8 UTF-8 zh_CN.UTF-8 UTF-8\u0026#34; \u0026gt;\u0026gt; /etc/locale.gen locale-gen eselect locale list eselect locale set X emerge -av sys-fs/btrfs-progs networkmanager app-admin/sysklogd sys-process/cronie sudo grub dev-vcs/git systemctl enable NetworkManager sed -i \u0026#39;s/\\# \\%wheel ALL=(ALL) ALL/\\%wheel ALL=(ALL) ALL/g\u0026#39; /etc/sudoers passwd root # add GRUB_DISABLE_OS_PROBER=false to the end of /etc/default/grub ln -sf /proc/self/mounts /etc/mtab systemd-machine-id-setup emerge -av sys-kernel/gentoo-kernel-bin eselect kernel list eselect kernel set X # add use initramfs in linux-firmware emerge -av genkernel linux-firmware genkernel --install --compress-initramfs-type=zstd initramfs grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=Gentoo grub-mkconfig -o /boot/grub/grub.cfg emerge -av kde-plasma/plasma-meta xorg-server xf86-video-amdgpu media-fonts/noto ","permalink":"https://hengistwang.github.io/posts/2_gentoo_install/","summary":"\u003ch2 id=\"i-dot-prepare-disk\"\u003eI. Prepare Disk\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#disk wipe\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esgdisk --zap-all /dev/sda\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#partition disk\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecfdisk -z /dev/sda\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emkfs.vfat -F \u003cspan style=\"color:#ae81ff\"\u003e32\u003c/span\u003e /dev/sda1\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emkfs.btrfs/ext4/xfs/.... /dev/sda3\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emkswap /dev/sda2\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eswapon /dev/sda2\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#then mount them\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"ii-dot-installing-stage3\"\u003eII. Installing stage3\u003c/h2\u003e\n\u003cp\u003eDownload the stage3 from Gentoo\u0026rsquo;s website and put it in the /mnt/gentoo\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# unpack it\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etar xpvf stage3-*.tar.xz --xattrs-include\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;*.*\u0026#39;\u003c/span\u003e --numeric-owner\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# get the portage config from my own git repo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# and set fstab\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egenfstab -U /mnt/gentoo \u0026gt;\u0026gt; /mnt/gentoo/etc/fstab\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# then config repos.conf:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emkdir --parents /mnt/gentoo/etc/portage/repos.conf\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecp /mnt/gentoo/usr/share/portage/config/repos.conf /mnt/gentoo/etc/portage/repos.conf/gentoo.conf\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# Copy DNS info\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecp --dereference /etc/resolv.conf /mnt/gentoo/etc/\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# Mounting the necessary filesystems\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emount --types proc /proc /mnt/gentoo/proc\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emount --rbind /sys /mnt/gentoo/sys\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emount --make-rslave /mnt/gentoo/sys\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emount --rbind /dev /mnt/gentoo/dev\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emount --make-rslave /mnt/gentoo/dev\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emount --bind /run /mnt/gentoo/run\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emount --make-slave /mnt/gentoo/run\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# chroot\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003echroot /mnt/gentoo /bin/bash\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esource /etc/profile\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eexport PS1\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;(chroot) \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003ePS1\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# make sure all partition are mounted correct\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eemerge --sync\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#set profle\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eeselect profile list\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eeselect profile set X\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# config ccache before this step\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eemerge -auvDN --with-bdeps\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ey --autounmask-write @world\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eadd ccache\u003c/p\u003e","title":"Gentoo Install"},{"content":"Chap I Chap II Preprocessing gcc -E src.c -o src.i This operation did several things.\nprocessing all the instructions begin with \u0026lsquo;#\u0026rsquo;, delete all of them except \u0026lsquo;#pragma\u0026rsquo;, and process the \u0026lsquo;#include\u0026rsquo; recursively. delete all comments. add line number and file name identifiers Compile to assembly code\ngcc -S src.i -o src.s # or gcc -S src.c -o src.s # or ccl src.c Assembly to machine code\nas src.s -o src.o # or gcc -c src.s -o src.o # or gcc -c src.c -o src.o Link to executable program\nld src.o ......... *.o Chap III get file type\n$ file /bin/bash /bin/bash: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 3.2.0, stripped $ file librt.so.1 librt.so.1: ELF 32-bit LSB shared object, Intel 80386, version 1 (SYSV), dynamically linked, for GNU/Linux 3.2.0, stripped Some Segments\nint printf(const char *, ...); int global_init_var = 0x11; int global_uninit_var; void func(int i) { printf(\u0026#34;%d\\n\u0026#34;, i); } int main(void) { static int static_var = 0x22; static int static_var2; int a = 1; int b; func(static_var + static_var2 + a + b); return a; } ","permalink":"https://hengistwang.github.io/posts/1_link_load_lib/","summary":"\u003ch2 id=\"chap-i\"\u003eChap I\u003c/h2\u003e\n\u003ch2 id=\"chap-ii\"\u003eChap II\u003c/h2\u003e\n\u003ch3 id=\"preprocessing\"\u003ePreprocessing\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egcc -E src.c -o src.i\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis operation did several things.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eprocessing all the instructions begin with \u0026lsquo;#\u0026rsquo;, delete all of them except \u0026lsquo;#pragma\u0026rsquo;, and process the \u0026lsquo;#include\u0026rsquo; recursively.\u003c/li\u003e\n\u003cli\u003edelete all comments.\u003c/li\u003e\n\u003cli\u003eadd line number and file name identifiers\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"compile\"\u003eCompile\u003c/h3\u003e\n\u003cp\u003eto assembly code\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egcc -S src.i -o src.s\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# or\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egcc -S src.c -o src.s\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# or\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eccl src.c\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"assembly\"\u003eAssembly\u003c/h3\u003e\n\u003cp\u003eto machine code\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eas src.s -o src.o\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# or\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egcc -c src.s -o src.o\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# or\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egcc -c src.c -o src.o\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"link\"\u003eLink\u003c/h3\u003e\n\u003cp\u003eto executable program\u003c/p\u003e","title":"Link Load Lib"}]